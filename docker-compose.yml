version: '3.8'
services:
  gateway-server:
    image: node:18
    working_dir: /app
    volumes:
      - ./apps/gateway-server:/app
    command: ["npm", "start"]
    ports:
      - "3001:3001"
    depends_on:
      - auth-server
      - event-server

  auth-server:
    image: node:18
    working_dir: /app
    volumes:
      - ./apps/auth-server:/app
    command: ["npm", "start"]
    ports:
      - "3002:3002"
    depends_on:
      - mongodb

  event-server:
    image: node:18
    working_dir: /app
    volumes:
      - ./apps/event-server:/app
    command: ["npm", "start"]
    ports:
      - "3003:3003"
    depends_on:
      - event-mongodb
      - redis

  # 인증(auth) 서버에서 사용하는 mongodb
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      # NOTE: .env 파일이 같은 디렉토리에 있다면 자동으로 값을 읽어온다.
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}

  # 이벤트 서버에서 사용하는 mongodb
  event-mongodb:
    image: mongo:latest
    container_name: event-mongodb
    ports:
      - "27018:27017"
    volumes:
      - event-mongo-data:/data/db
    environment:
      # NOTE: .env 파일이 같은 디렉토리에 있다면 자동으로 값을 읽어온다.
      MONGO_INITDB_ROOT_USERNAME: ${EVENT_MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${EVENT_MONGO_INITDB_ROOT_PASSWORD}

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped # 사용자가 멈춘 경우는 재시작X (기본적으로 항상 재시작)

volumes:
  mongo-data:
  event-mongo-data:
  redis-data:
